version: '3.7'
services:
# mysql
  mysql:
    image: mysql:5.7
    # build: ./mysql/
    container_name: test_mysql
    volumes:
    #   - "./db:/var/lib/mysql"
      - ./mysql/db:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test_db
      # MYSQL_USER: root
      # MYSQL_PASSWORD: password
    networks:
      - back-tier

  # web:
  #   # build: myproxy
  #   image: nginx:latest
  #   volumes:
  #     - ./myproxy/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf
    # links:
    #   - mysql:mysql
    # depends_on:
    #   - web:
# reverse-proxy
  proxy:
    image: nginx:latest
    volumes:
      - ./myproxy/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf
      # - ./templates:/var/www/templates
    networks:
      - front-tier
    depends_on:
        # - app
        - node
    ports:
      - "6969:6969"
  app:
    build: .
    # links:
    #   - mysql:mysql
    depends_on:
        - mysql
    ports:
      - "8080:8080"
    restart: always
    environment:
        MYSQL_DB_HOST: mysql
        MYSQL_DB: test_db
        MYSQL_PORT: 3306
        MYSQL_USER: subuser
        MYSQL_PASSWORD: password2
    networks:
      # - front-tier
      - back-tier
  node:
    build: ./templates
    container_name: "angular-app"
    # build:
    #   dckerfile: ./templates/Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - "./templates/my-app:/templates/my-app"
    # tty: true
    # restart: always
    # networks:
    #   - back-tier


volumes:
  db-data:

networks:
  front-tier:
  back-tier:
