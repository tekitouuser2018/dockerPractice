server{
    listen       6969;
    server_name  nginx.test;

    charset utf-8;
    # root /var/www/app/public;

    # proxy_redirect off;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header Host $http_host;
    proxy_set_header    Host    $host;
    proxy_set_header    X-Real-IP    $remote_addr;
    proxy_set_header    X-Forwarded-Host       $host;
    proxy_set_header    X-Forwarded-Server    $host;
    proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

    

    location / {
        # Check if the origin of th request
        set $cors 'on';

        # if ($http_origin ~* (https?://.*\.pio\.com?(:[0-9]+)?$)) {
        #     set $cors 'on';
        # }

        if ($request_method = OPTIONS) {
            set $cors "${cors}_options";
        }

        # Allow CORS on preflight request
        if ($cors = 'on_options') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            return 204;
        }


        # Allow CORS on other requests after returning from the upstreams
        if ($cors = 'on') {
            # add_header 'Access-Control-Allow-Origin' "$http_origin";
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type, User-Agent, Keep-Alive';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header Content-Type 'application/json charset=UTF-8';
            add_header Access-Control-Allow-Credentials 'true' always;

        }

        # proxy_pass    http://docker.for.mac.localhost:8080;
        proxy_pass    http://docker.for.mac.localhost:4200;

    }

    location /err{
        return 500;
    }

    location /test{
        # Check if the origin of th request
        set $cors 'on';

        # if ($http_origin ~* (https?://.*\.pio\.com?(:[0-9]+)?$)) {
        #     set $cors 'on';
        # }

        if ($request_method = OPTIONS) {
            set $cors "${cors}_options";
        }

        # Allow CORS on preflight request
        if ($cors = 'on_options') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            return 204;
        }


        # Allow CORS on other requests after returning from the upstreams
        if ($cors = 'on') {
            # add_header 'Access-Control-Allow-Origin' "$http_origin";
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type, User-Agent, Keep-Alive';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header Content-Type 'application/json charset=UTF-8';
            add_header Access-Control-Allow-Credentials 'true' always;

        }
        proxy_pass    http://docker.for.mac.localhost:8080/;
    }

    location /test2/{
        # Check if the origin of th request
        set $cors 'on';

        # if ($http_origin ~* (https?://.*\.pio\.com?(:[0-9]+)?$)) {
        #     set $cors 'on';
        # }

        if ($request_method = OPTIONS) {
            set $cors "${cors}_options";
        }

        # Allow CORS on preflight request
        if ($cors = 'on_options') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            return 204;
        }


        # Allow CORS on other requests after returning from the upstreams
        if ($cors = 'on') {
            # add_header 'Access-Control-Allow-Origin' "$http_origin";
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type, User-Agent, Keep-Alive';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header Content-Type 'application/json charset=UTF-8';
            add_header Access-Control-Allow-Credentials 'true' always;

        }
        proxy_pass    http://docker.for.mac.localhost:8080/users;
    }

    location /back {
        # Check if the origin of th request
        set $cors 'on';

        # if ($http_origin ~* (https?://.*\.pio\.com?(:[0-9]+)?$)) {
        #     set $cors 'on';
        # }

        if ($request_method = OPTIONS) {
            set $cors "${cors}_options";
        }

        # Allow CORS on preflight request
        if ($cors = 'on_options') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            return 204;
        }


        # Allow CORS on other requests after returning from the upstreams
        if ($cors = 'on') {
            # add_header 'Access-Control-Allow-Origin' "$http_origin";
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type, User-Agent, Keep-Alive';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            # add_header Content-Type 'application/json charset=UTF-8';
            add_header Access-Control-Allow-Credentials 'true' always;

        }

        proxy_pass    http://docker.for.mac.localhost:8080;

    }

    # location http://localhost:8080 {

    #     # preflightに対するレスポンス指定
    #     # if ($request_method = 'OPTIONS') {
    #     #     add_header Access-Control-Allow-Origin '*';
    #     #     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE';
    #     #     add_header Access-Control-Allow-Headers 'Origin, Authorization, Accept, Content-Type';
    #     #     add_header Access-Control-Max-Age 3600;

    #     #     add_header Content-Type 'application/json charset=UTF-8';
    #     #     add_header Content-Length 0;

    #     #     return 204;
    #     #  }

    #     # alwaysオプションを付けて、常にヘッダが出力されるようにする
    #     add_header Access-Control-Allow-Origin '*' always;
    #     add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type';
    #     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE';
    #     add_header Content-Type 'application/json charset=UTF-8';

    # }
}

# server{
#     listen       6969;
#     server_name  nginx.api;

#     charset utf-8;
#     # root /var/www/app/public;

#     # proxy_redirect off;
#     # proxy_set_header X-Real-IP $remote_addr;
#     # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     # proxy_set_header Host $http_host;
#     proxy_set_header    Host    $host;
#     proxy_set_header    X-Real-IP    $remote_addr;
#     proxy_set_header    X-Forwarded-Host       $host;
#     proxy_set_header    X-Forwarded-Server    $host;
#     proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

#     location / {
#         # Check if the origin of th request
#         set $cors 'on';

#         # if ($http_origin ~* (https?://.*\.pio\.com?(:[0-9]+)?$)) {
#         #     set $cors 'on';
#         # }

#         if ($request_method = OPTIONS) {
#             set $cors "${cors}_options";
#         }

#         # Allow CORS on preflight request
#         if ($cors = 'on_options') {
#             add_header 'Content-Length' 0;
#             add_header 'Content-Type' 'text/plain; charset=utf-8';
#             add_header 'Access-Control-Allow-Origin' "$http_origin";
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
#             return 204;
#         }

#         proxy_pass    http://docker.for.mac.localhost:8080;

#         # Allow CORS on other requests after returning from the upstreams
#         if ($cors = 'on') {
#             # add_header 'Access-Control-Allow-Origin' "$http_origin";
#             # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
#             # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
#             add_header Access-Control-Allow-Origin '*' always;
#             add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Authorization, Accept, Content-Type, User-Agent, Keep-Alive';
#             add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
#             # add_header Content-Type 'application/json charset=UTF-8';
#             add_header Access-Control-Allow-Credentials 'true' always;

#         }

#     }

# }

